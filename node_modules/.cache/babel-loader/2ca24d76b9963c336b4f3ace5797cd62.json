{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fork_1 = __importDefault(require(\"./fork\"));\n\nvar core_1 = __importDefault(require(\"./def/core\"));\n\nvar es6_1 = __importDefault(require(\"./def/es6\"));\n\nvar es7_1 = __importDefault(require(\"./def/es7\"));\n\nvar es2020_1 = __importDefault(require(\"./def/es2020\"));\n\nvar jsx_1 = __importDefault(require(\"./def/jsx\"));\n\nvar flow_1 = __importDefault(require(\"./def/flow\"));\n\nvar esprima_1 = __importDefault(require(\"./def/esprima\"));\n\nvar babel_1 = __importDefault(require(\"./def/babel\"));\n\nvar typescript_1 = __importDefault(require(\"./def/typescript\"));\n\nvar es_proposals_1 = __importDefault(require(\"./def/es-proposals\"));\n\nvar namedTypes_1 = require(\"./gen/namedTypes\");\n\nexports.namedTypes = namedTypes_1.namedTypes;\n\nvar _a = fork_1.default([// This core module of AST types captures ES5 as it is parsed today by\n// git://github.com/ariya/esprima.git#master.\ncore_1.default, // Feel free to add to or remove from this list of extension modules to\n// configure the precise type hierarchy that you need.\nes6_1.default, es7_1.default, es2020_1.default, jsx_1.default, flow_1.default, esprima_1.default, babel_1.default, typescript_1.default, es_proposals_1.default]),\n    astNodesAreEquivalent = _a.astNodesAreEquivalent,\n    builders = _a.builders,\n    builtInTypes = _a.builtInTypes,\n    defineMethod = _a.defineMethod,\n    eachField = _a.eachField,\n    finalize = _a.finalize,\n    getBuilderName = _a.getBuilderName,\n    getFieldNames = _a.getFieldNames,\n    getFieldValue = _a.getFieldValue,\n    getSupertypeNames = _a.getSupertypeNames,\n    n = _a.namedTypes,\n    NodePath = _a.NodePath,\n    Path = _a.Path,\n    PathVisitor = _a.PathVisitor,\n    someField = _a.someField,\n    Type = _a.Type,\n    use = _a.use,\n    visit = _a.visit;\n\nexports.astNodesAreEquivalent = astNodesAreEquivalent;\nexports.builders = builders;\nexports.builtInTypes = builtInTypes;\nexports.defineMethod = defineMethod;\nexports.eachField = eachField;\nexports.finalize = finalize;\nexports.getBuilderName = getBuilderName;\nexports.getFieldNames = getFieldNames;\nexports.getFieldValue = getFieldValue;\nexports.getSupertypeNames = getSupertypeNames;\nexports.NodePath = NodePath;\nexports.Path = Path;\nexports.PathVisitor = PathVisitor;\nexports.someField = someField;\nexports.Type = Type;\nexports.use = use;\nexports.visit = visit; // Populate the exported fields of the namedTypes namespace, while still\n// retaining its member types.\n\nObject.assign(namedTypes_1.namedTypes, n);","map":{"version":3,"sources":["/Users/owner/Desktop/Naples/ReactJS/Rancell-Portfolio/node_modules/ast-types/main.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","fork_1","require","core_1","es6_1","es7_1","es2020_1","jsx_1","flow_1","esprima_1","babel_1","typescript_1","es_proposals_1","namedTypes_1","namedTypes","_a","default","astNodesAreEquivalent","builders","builtInTypes","defineMethod","eachField","finalize","getBuilderName","getFieldNames","getFieldValue","getSupertypeNames","n","NodePath","Path","PathVisitor","someField","Type","use","visit","assign"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGP,eAAe,CAACQ,OAAO,CAAC,QAAD,CAAR,CAA5B;;AACA,IAAIC,MAAM,GAAGT,eAAe,CAACQ,OAAO,CAAC,YAAD,CAAR,CAA5B;;AACA,IAAIE,KAAK,GAAGV,eAAe,CAACQ,OAAO,CAAC,WAAD,CAAR,CAA3B;;AACA,IAAIG,KAAK,GAAGX,eAAe,CAACQ,OAAO,CAAC,WAAD,CAAR,CAA3B;;AACA,IAAII,QAAQ,GAAGZ,eAAe,CAACQ,OAAO,CAAC,cAAD,CAAR,CAA9B;;AACA,IAAIK,KAAK,GAAGb,eAAe,CAACQ,OAAO,CAAC,WAAD,CAAR,CAA3B;;AACA,IAAIM,MAAM,GAAGd,eAAe,CAACQ,OAAO,CAAC,YAAD,CAAR,CAA5B;;AACA,IAAIO,SAAS,GAAGf,eAAe,CAACQ,OAAO,CAAC,eAAD,CAAR,CAA/B;;AACA,IAAIQ,OAAO,GAAGhB,eAAe,CAACQ,OAAO,CAAC,aAAD,CAAR,CAA7B;;AACA,IAAIS,YAAY,GAAGjB,eAAe,CAACQ,OAAO,CAAC,kBAAD,CAAR,CAAlC;;AACA,IAAIU,cAAc,GAAGlB,eAAe,CAACQ,OAAO,CAAC,oBAAD,CAAR,CAApC;;AACA,IAAIW,YAAY,GAAGX,OAAO,CAAC,kBAAD,CAA1B;;AACAH,OAAO,CAACe,UAAR,GAAqBD,YAAY,CAACC,UAAlC;;AACA,IAAIC,EAAE,GAAGd,MAAM,CAACe,OAAP,CAAe,CACpB;AACA;AACAb,MAAM,CAACa,OAHa,EAIpB;AACA;AACAZ,KAAK,CAACY,OANc,EAOpBX,KAAK,CAACW,OAPc,EAQpBV,QAAQ,CAACU,OARW,EASpBT,KAAK,CAACS,OATc,EAUpBR,MAAM,CAACQ,OAVa,EAWpBP,SAAS,CAACO,OAXU,EAYpBN,OAAO,CAACM,OAZY,EAapBL,YAAY,CAACK,OAbO,EAcpBJ,cAAc,CAACI,OAdK,CAAf,CAAT;AAAA,IAeIC,qBAAqB,GAAGF,EAAE,CAACE,qBAf/B;AAAA,IAesDC,QAAQ,GAAGH,EAAE,CAACG,QAfpE;AAAA,IAe8EC,YAAY,GAAGJ,EAAE,CAACI,YAfhG;AAAA,IAe8GC,YAAY,GAAGL,EAAE,CAACK,YAfhI;AAAA,IAe8IC,SAAS,GAAGN,EAAE,CAACM,SAf7J;AAAA,IAewKC,QAAQ,GAAGP,EAAE,CAACO,QAftL;AAAA,IAegMC,cAAc,GAAGR,EAAE,CAACQ,cAfpN;AAAA,IAeoOC,aAAa,GAAGT,EAAE,CAACS,aAfvP;AAAA,IAesQC,aAAa,GAAGV,EAAE,CAACU,aAfzR;AAAA,IAewSC,iBAAiB,GAAGX,EAAE,CAACW,iBAf/T;AAAA,IAekVC,CAAC,GAAGZ,EAAE,CAACD,UAfzV;AAAA,IAeqWc,QAAQ,GAAGb,EAAE,CAACa,QAfnX;AAAA,IAe6XC,IAAI,GAAGd,EAAE,CAACc,IAfvY;AAAA,IAe6YC,WAAW,GAAGf,EAAE,CAACe,WAf9Z;AAAA,IAe2aC,SAAS,GAAGhB,EAAE,CAACgB,SAf1b;AAAA,IAeqcC,IAAI,GAAGjB,EAAE,CAACiB,IAf/c;AAAA,IAeqdC,GAAG,GAAGlB,EAAE,CAACkB,GAf9d;AAAA,IAemeC,KAAK,GAAGnB,EAAE,CAACmB,KAf9e;;AAgBAnC,OAAO,CAACkB,qBAAR,GAAgCA,qBAAhC;AACAlB,OAAO,CAACmB,QAAR,GAAmBA,QAAnB;AACAnB,OAAO,CAACoB,YAAR,GAAuBA,YAAvB;AACApB,OAAO,CAACqB,YAAR,GAAuBA,YAAvB;AACArB,OAAO,CAACsB,SAAR,GAAoBA,SAApB;AACAtB,OAAO,CAACuB,QAAR,GAAmBA,QAAnB;AACAvB,OAAO,CAACwB,cAAR,GAAyBA,cAAzB;AACAxB,OAAO,CAACyB,aAAR,GAAwBA,aAAxB;AACAzB,OAAO,CAAC0B,aAAR,GAAwBA,aAAxB;AACA1B,OAAO,CAAC2B,iBAAR,GAA4BA,iBAA5B;AACA3B,OAAO,CAAC6B,QAAR,GAAmBA,QAAnB;AACA7B,OAAO,CAAC8B,IAAR,GAAeA,IAAf;AACA9B,OAAO,CAAC+B,WAAR,GAAsBA,WAAtB;AACA/B,OAAO,CAACgC,SAAR,GAAoBA,SAApB;AACAhC,OAAO,CAACiC,IAAR,GAAeA,IAAf;AACAjC,OAAO,CAACkC,GAAR,GAAcA,GAAd;AACAlC,OAAO,CAACmC,KAAR,GAAgBA,KAAhB,C,CACA;AACA;;AACArC,MAAM,CAACsC,MAAP,CAActB,YAAY,CAACC,UAA3B,EAAuCa,CAAvC","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fork_1 = __importDefault(require(\"./fork\"));\nvar core_1 = __importDefault(require(\"./def/core\"));\nvar es6_1 = __importDefault(require(\"./def/es6\"));\nvar es7_1 = __importDefault(require(\"./def/es7\"));\nvar es2020_1 = __importDefault(require(\"./def/es2020\"));\nvar jsx_1 = __importDefault(require(\"./def/jsx\"));\nvar flow_1 = __importDefault(require(\"./def/flow\"));\nvar esprima_1 = __importDefault(require(\"./def/esprima\"));\nvar babel_1 = __importDefault(require(\"./def/babel\"));\nvar typescript_1 = __importDefault(require(\"./def/typescript\"));\nvar es_proposals_1 = __importDefault(require(\"./def/es-proposals\"));\nvar namedTypes_1 = require(\"./gen/namedTypes\");\nexports.namedTypes = namedTypes_1.namedTypes;\nvar _a = fork_1.default([\n    // This core module of AST types captures ES5 as it is parsed today by\n    // git://github.com/ariya/esprima.git#master.\n    core_1.default,\n    // Feel free to add to or remove from this list of extension modules to\n    // configure the precise type hierarchy that you need.\n    es6_1.default,\n    es7_1.default,\n    es2020_1.default,\n    jsx_1.default,\n    flow_1.default,\n    esprima_1.default,\n    babel_1.default,\n    typescript_1.default,\n    es_proposals_1.default,\n]), astNodesAreEquivalent = _a.astNodesAreEquivalent, builders = _a.builders, builtInTypes = _a.builtInTypes, defineMethod = _a.defineMethod, eachField = _a.eachField, finalize = _a.finalize, getBuilderName = _a.getBuilderName, getFieldNames = _a.getFieldNames, getFieldValue = _a.getFieldValue, getSupertypeNames = _a.getSupertypeNames, n = _a.namedTypes, NodePath = _a.NodePath, Path = _a.Path, PathVisitor = _a.PathVisitor, someField = _a.someField, Type = _a.Type, use = _a.use, visit = _a.visit;\nexports.astNodesAreEquivalent = astNodesAreEquivalent;\nexports.builders = builders;\nexports.builtInTypes = builtInTypes;\nexports.defineMethod = defineMethod;\nexports.eachField = eachField;\nexports.finalize = finalize;\nexports.getBuilderName = getBuilderName;\nexports.getFieldNames = getFieldNames;\nexports.getFieldValue = getFieldValue;\nexports.getSupertypeNames = getSupertypeNames;\nexports.NodePath = NodePath;\nexports.Path = Path;\nexports.PathVisitor = PathVisitor;\nexports.someField = someField;\nexports.Type = Type;\nexports.use = use;\nexports.visit = visit;\n// Populate the exported fields of the namedTypes namespace, while still\n// retaining its member types.\nObject.assign(namedTypes_1.namedTypes, n);\n"]},"metadata":{},"sourceType":"script"}